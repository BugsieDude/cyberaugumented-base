Class DCY_DoubleBarrel : DCY_Weapon
{
  Default
  {
	Tag "Stevens 430k Model Dual Barrel Shotgun";
	Inventory.PickupSound "dcy/shotgunpickup";
	Inventory.PickupMessage "You handle the ass kicker, aka. the Stevens 430k Model Dual Barrel Shotgun!";
	Weapon.SelectionOrder 400;
	Weapon.AmmoUse 2;
	Weapon.AmmoGive 8;
	Weapon.AmmoType "DCY_Shell";
	Weapon.SelectionOrder 600;
  }
  
  action void A_SuperShotgunFire()
  {
	A_GunFlash();
	
	invoker.DepleteAmmo(invoker.bAltFire, true);
	
	for (int i = -4; i < 5; i += 8)
		A_FireBullets(11, 7, 10, 11, "DCY_Null", FBF_NORANDOM, 8192, "DCY_TracerPlayer", 0, spawnofs_xy: i);
	
	A_QuakeEx(1, 1, 1, 30, 0, 90, "none", QF_SCALEDOWN, falloff: 180);
	A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE);
  }
  
  double xx, yy, xx2, yy2, tic, tic2, tic3;
  
  States
  {
  Spawn:
	SGS_ Z -1;
	Stop;
  OverlayIdle:
	SGS_ A 1;
	Stop;
  OverlayMuzzle:
	SFS_ ABA 1 Bright
	{
		A_OverlayOffset(OverlayID(), 0, -(invoker.lower / 2), WOF_INTERPOLATE);
		DCY_HandleScale(OverlayID());
	}
	Stop;
  OverlayFire:
	SGS_ A 1
	{
		invoker.lower += 4.65;
		A_WeaponOffset(0 - (invoker.lower / 15), 32 + (invoker.lower / 2), WOF_INTERPOLATE);
		DCY_HandleScale(5);
	}
	SGS_ A 1
	{
		invoker.lower += 6.65;
		A_WeaponOffset(0 - (invoker.lower / 15), 32 + (invoker.lower / 2), WOF_INTERPOLATE);
		DCY_HandleScale(5);
	}
	SGS_ AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
	{
		if (invoker.lower > 0.01) invoker.lower *= 0.45; else invoker.lower = 0;
		A_WeaponOffset(0 - (invoker.lower / 15), 32 + invoker.lower, WOF_INTERPOLATE);
		DCY_HandleScale(5);
	}
	Stop;
  OverlayReload:
	SGS_ A 1
	{
		invoker.lower = 0;
		invoker.xx = 0;
		invoker.yy = 32;
		A_WeaponOffset(0 - (invoker.lower / 15), 32 + (invoker.lower / 3), WOF_INTERPOLATE);
		DCY_HandleScale(5);
	}
	SGS_ DCCBBBCC 1
	{
		invoker.tic++;
		invoker.xx = CyberaugumentedEventHandler.Lerp(invoker.xx, -40, 0.3) + sin(invoker.tic);
		invoker.yy = CyberaugumentedEventHandler.Lerp(invoker.yy, 26, 0.3) + (sin(invoker.tic) * 2);
		A_WeaponOffset(invoker.xx, invoker.yy, WOF_INTERPOLATE);
	}
	SGS_ DDEEFFFFFFFFFFFFFFFJJJJJJJJ 1
	{
		invoker.xx = CyberaugumentedEventHandler.Lerp(invoker.xx, 20, 0.3);
		invoker.yy = CyberaugumentedEventHandler.Lerp(invoker.yy, 40, 0.3);
		A_WeaponOffset(invoker.xx, invoker.yy, WOF_INTERPOLATE);
	}
	SGS_ CCBBBCCDDAAAAAA 1
	{
		invoker.xx = CyberaugumentedEventHandler.Lerp(invoker.xx, 0, 0.3);
		invoker.yy = CyberaugumentedEventHandler.Lerp(invoker.yy, 32, 0.3);
		A_WeaponOffset(invoker.xx, invoker.yy, WOF_INTERPOLATE);
	}
	Stop;
  OverlayHand:
	TNT1 A 10
	{
		invoker.tic2 = 2;
		invoker.tic3 = 7;
		invoker.xx2 = -100;
		invoker.yy2 = 80;
		A_OverlayOffset(overlayID(), invoker.xx2, invoker.yy2, WOF_INTERPOLATE);
	}
	SGS_ GGGGGGGGGGGG 1
	{
		invoker.tic3 *= 0.75;
		invoker.xx2 = CyberaugumentedEventHandler.Lerp(invoker.xx2, 10, 0.25);
		invoker.yy2 = CyberaugumentedEventHandler.Lerp(invoker.yy2, 8, 0.25);
		A_OverlayOffset(overlayID(), invoker.xx2, invoker.yy2 - invoker.tic3, WOF_INTERPOLATE);
	}
	SGS_ GGG 1
	{
		invoker.xx2 = CyberaugumentedEventHandler.Lerp(invoker.xx2, 15, 0.2);
		invoker.yy2 = CyberaugumentedEventHandler.Lerp(invoker.yy2, 18, 0.2);
		A_OverlayOffset(overlayID(), invoker.xx2, invoker.yy2, WOF_INTERPOLATE);
	}
	SGS_ HHHIIIIIIIIIII 1
	{
		invoker.xx2 = CyberaugumentedEventHandler.Lerp(invoker.xx2, 15, 0.3);
		invoker.yy2 = CyberaugumentedEventHandler.Lerp(invoker.yy2, 18, 0.3);
		invoker.tic2 *= 2;
		A_OverlayOffset(overlayID(), invoker.xx2 + invoker.tic2, invoker.yy2 + (invoker.tic2 * 1.5), WOF_INTERPOLATE);
	}
	Stop;
  Feel:
	TNT1 A 1 A_ZoomFactor(0.95);
	TNT1 A 1 A_ZoomFactor(0.85);
	TNT1 A 1 A_ZoomFactor(0.9375);
	TNT1 A 1 A_ZoomFactor(0.9625);
	TNT1 A 1 A_ZoomFactor(0.9726);
	TNT1 A 1 A_ZoomFactor(0.985);
	TNT1 A 1 A_ZoomFactor(0.997);
	TNT1 A 1 A_ZoomFactor(1);
	Stop;
  Select:
	TNT1 A 0
	{
		invoker.offsx = -50;
		invoker.offsy = 150;
		A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		A_OverlayPivotAlign(5, PSPA_CENTER, PSPA_CENTER);
		A_OverlayRotate(5, (invoker.offsy / 3.5), WOF_INTERPOLATE);
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		DCY_Raise(0.4);
		A_OverlayPivotAlign(5, PSPA_CENTER, PSPA_CENTER);
		A_OverlayRotate(5, -(invoker.offsy / 3.5), WOF_INTERPOLATE);
		return (invoker.offsx >= -0.1 || invoker.offsy <= 0.1) ? ResolveState("Ready") : ResolveState(null);
	}
	Goto Select+1;
  Deselect:
	TNT1 A 0
	{
		invoker.offsx = invoker.saveoffsx - 2;
		invoker.offsy = invoker.saveoffsy + 2;
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		DCY_Lower(1.75, 1.5);
		
		return (invoker.offsx <= -50 || invoker.offsy >= 150) ? ResolveState("DeselectLoop") : ResolveState(null);
	}
	Goto Deselect+1;
  Ready:
	TNT1 A 1
	{
		invoker.lower = 0;
		A_Overlay(5, "OverlayIdle");
		A_WeaponReady();
		A_OverlayOffset(5, 0, 0, WOF_INTERPOLATE);
	}
	Loop;
  Fire:
  NormalFire:
	TNT1 A 1 A_StartSound("DCYSuperShotgun/Fire", CHAN_WEAPON);
	TNT1 A 5
	{
		A_Overlay(10, "Feel");
		
		A_Overlay(11, "OverlayMuzzle");
		A_OverlayFlags(11, PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(11, STYLE_ADD);
	
		A_Overlay(5, "OverlayFire");
		A_SuperShotgunFire();
	}
	TNT1 A 0 A_JumpIfNoAmmo("Ready");
	TNT1 A 10
	{
		invoker.lower = 0;
		A_Overlay(5, "OverlayReload");
		A_Overlay(6, "OverlayHand");
	}
	TNT1 A 35 A_StartSound("DCYSuperShotgun/Reload", CHAN_WEAPON, CHANF_OVERLAP, 0.5);
	TNT1 A 1
	{
		A_Refire();
	}
	Goto Ready;
  }
}