Class DCY_Endogravity : DCY_Weapon
{
  Default
  {
	Tag "Endogravity Seize Munition";
	Weapon.SelectionOrder 2800;
	Weapon.SlotNumber 8;
	+WEAPON.NOAUTOFIRE;
	+NOEXTREMEDEATH;
	Weapon.AmmoGive 50;
	Weapon.AmmoUse 1;
	Weapon.AmmoType "DCY_Antimateria";
	Inventory.PickupSound "dcy/bigfuckinggunpickup";
	Inventory.PickupMessage "What is this. It's a Endogravity Seize Munition? ...It's a gravity gun too, so... have fun?";
  }
  
  override Inventory CreateCopy(Actor other)
  {
	let x = CA_Variables.Get();
	if (x && !x.hasAntimateriaWeapons) x.hasAntimateriaWeapons = true;
	return Super.CreateCopy(other);
  }
  
  action void A_EndoAltBlast()
  {
    A_QuakeEx(2, 2, 2, 10, 0, 150, "none", QF_SCALEDOWN|QF_3D);
	A_StartSound("Endogravity/Push", CHAN_WEAPON, CHANF_OVERLAP);
	A_Recoil(5);
	DCY_Muzzle(0.5, (160, 90));
	invoker.DepleteAmmo(invoker.bAltFire, true);
	A_GunFlash();
	
	FLineTraceData d;
	
	A_FireBullets(0, 0, 1, 0, "DCY_Null2", 0);
	LineTrace(angle, 8192, pitch, TRF_NOSKY, height / 2, 0, 0, d);
	let h = d.HitActor;
		
	if (d.HitType == TRACE_HitWall || d.HitType == TRACE_HitActor || d.HitType == TRACE_HitCeiling || d.HitType == TRACE_HitFloor)
	{
		/*actor puff = Actor(Spawn("DCY_EndogravityPuff"));
		
		if (!puff) return;
		puff.SetOrigin(d.HitLocation, false);
		puff.A_Face(invoker.owner);*/
		
		if (h && h.bSHOOTABLE && h.Health > 0)
		{
			h.A_Face(invoker.owner);
			h.Vel3DFromAngle(30, invoker.owner.angle, invoker.owner.pitch);
			h.vel.z += 6;
			h.DamageMobj(self, invoker.owner, 300, "Plasma", DMG_PLAYERATTACK|DMG_NO_PROTECT|DMG_NO_PAIN);
		}
	}
		
	for (int i = 0; i < d.distance - 6; i += 6)
	{
		actor y = Actor(Spawn("DCY_EndogravityTrail", Level.Vec3Offset(d.HitLocation, d.HitDir * -i)));
		y.A_Face(invoker.owner);
	}
  }
  
  States
  {
  Spawn:
	3ND_ Z -1;
	Stop;
  OverlayIdle:
	3ND_ A 1;
	Loop;
  OverlayMuzzle:
	MUZ_ DD 1 Bright
	{
		invoker.t += 0.1;
		A_OverlayRotate(-1, frandom(0, 360));
		A_OverlayScale(-1, invoker.t, invoker.t);
	}
	Stop;
  OverlayFire:
	3ND_ A 1
	{
		invoker.lower += 8;
		A_WeaponOffset(0 - (invoker.lower / 5), 32 + (invoker.lower / 2.5), WOF_INTERPOLATE);
		DCY_HandleScale(5);
	}
	3ND_ AAAAAAAAAAAAABBCCDDEEBBCCDDEEBBCCDDEEBBCCDDEE 1
	{
		if (invoker.lower > 0.01) invoker.lower *= 0.85; else invoker.lower = 0;
		A_WeaponOffset(0 - (invoker.lower / 5), 32 + (invoker.lower * 1.5), WOF_INTERPOLATE);
		DCY_HandleScale(5);
	}
	Goto OverlayIdle;
  Feel:
	TNT1 A 1
	{
		A_QuakeEx(1, 1, 1, 15, 0, 450, "none", QF_RELATIVE|QF_SCALEDOWN|QF_3D);
		A_ZoomFactor(0.9);
	}
	TNT1 A 1 A_ZoomFactor(0.925);
	TNT1 A 1 A_ZoomFactor(0.9475);
	TNT1 A 1 A_ZoomFactor(0.96);
	TNT1 A 1 A_ZoomFactor(0.9825);
	TNT1 A 1 A_ZoomFactor(0.989);
	TNT1 A 1 A_ZoomFactor(0.9926);
	TNT1 A 1 A_ZoomFactor(0.995);
	TNT1 A 1 A_ZoomFactor(0.997);
	TNT1 A 6 A_ZoomFactor(1);
	Stop;
  Select:
	TNT1 A 0
	{
		invoker.offsx = -75;
		invoker.offsy = 100;
		A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		A_OverlayPivotAlign(5, PSPA_CENTER, PSPA_CENTER);
		A_OverlayRotate(5, invoker.offsx / 2.5, WOF_INTERPOLATE);
		A_StartSound("Endogravity/Up", 20);
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		DCY_Raise();
		A_OverlayPivotAlign(5, PSPA_CENTER, PSPA_CENTER);
		A_OverlayRotate(5, invoker.offsx / 2.5, WOF_INTERPOLATE);
		return (invoker.offsx >= -0.1 || invoker.offsy <= 0.1) ? ResolveState("Ready") : ResolveState(null);
	}
	Goto Select+1;
  Deselect:
	TNT1 A 0
	{
		invoker.offsx = invoker.saveoffsx - 2;
		invoker.offsy = invoker.saveoffsy + 2;
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		DCY_Lower();
		
		return (invoker.offsx <= -75 || invoker.offsy >= 100) ? ResolveState("DeselectLoop") : ResolveState(null);
	}
	Goto Deselect+1;
  Ready:
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		A_WeaponReady();
		A_OverlayOffset(5, 0, 0, WOF_INTERPOLATE);
	}
	Loop;
  Fire:
  Denied:
	TNT1 A 1 A_StartSound("Endogravity/Error", CHAN_WEAPON);
	TNT1 AAAAAAAAAAAAAAAA 1 A_WeaponOffset(frandom(-1, 1), frandom(-1, 1) + 32, WOF_INTERPOLATE);
	TNT1 A 5;
	Goto Ready;
  AltFire:
	TNT1 A 1 A_Overlay(5, "OverlayIdle");
	TNT1 A 30
	{
		A_Overlay(10, "Feel");
		A_Overlay(5, "OverlayFire");
		A_EndoAltBlast();
	}
	Goto Ready;
  }
}

Class DCY_EndogravityTrail : Actor
{
  override void PostBeginPlay()
  {
	A_SpawnParticleEx(0x60f542, TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_NOTIMEFREEZE|SPF_RELATIVE, 4, random(15, 20), 0, sizestep: 0.75);
	A_SpawnParticleEx(0x37ad1f, TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_NOTIMEFREEZE|SPF_RELATIVE|SPF_ROLL, 10, random(10, 20), 0, velx: frandom(-0.5, 0.5), vely: frandom(-0.5, 0.5), velz: frandom(-0.5, 0.5), sizestep: 1.05, startroll: frandom(0, 360), rollvel: frandom(-7, 7));
	if (!random(0, 7)) A_SpawnParticleEx(0x37ad1f, TexMan.CheckForTexture("graphics/particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_NOTIMEFREEZE|SPF_RELATIVE, random(5, 35), random(1, 9), 0, frandom(-1, 1), frandom(-1, 1), frandom(-1, 1), frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-1.5, 1.5), frandom(-0.2, 0.2), frandom(-0.2, 0.2), frandom(-0.2, 0.2), fadestepf: 0, sizestep: -0.5);	
	Destroy();
	return;
  }
}