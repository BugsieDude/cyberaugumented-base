Class DCY_IonizedArc : DCY_Weapon
{
  Default
  {
	Tag "Fusionized Plasma Shortsword 'Ionized Arc'";
	Inventory.PickupSound "dcy/swordpickup";
	Obituary "%o has been sliced to bits by %k's Ionized Arc.";
	Inventory.PickupMessage "Time to be careful with this 'Ionized Arc'.";
	Weapon.SelectionOrder 2200;
	Weapon.Kickback 0;
	DamageType "Melee";
	+WEAPON.MELEEWEAPON;
  }
  
  protected int trail;
  double wsavex, wsavey, wsavea;
  double xx, yy, slice;
  int fram, swing;
  
  const ARC_TRAIL = 50;
  
  action void A_ArcTrail()
  {
	if (invoker.trail >= ARC_TRAIL) invoker.trail = 0;
	int layer = invoker.trail - 10000;
	A_Overlay(layer, "OverlayTrail");
	
	let p = player.FindPSprite(PSP_WEAPON);
	let bob = player.mo.BobWeapon(System.GetTimeFrac());
	
	A_OverlayPivotAlign(layer, PSPA_CENTER, PSPA_CENTER);
	A_OverlayFlags(layer, PSPF_FORCEALPHA|PSPF_ALPHA|PSPF_RENDERSTYLE, true);
	A_OverlayFlags(layer, PSPF_ADDBOB|PSPF_ADDWEAPON, false);
	A_OverlayRenderStyle(layer, STYLE_ADD);
	A_OverlayAlpha(layer, 0.25);
	
	invoker.wsavex = p.x + bob.x;
	invoker.wsavey = p.y + bob.y;
	invoker.wsavea = p.rotation;
	
	A_OverlayOffset(layer, invoker.wsavex, invoker.wsavey);
	A_OverlayRotate(layer, invoker.wsavea);
	
	invoker.trail++;
  }
  
  States
  {
  LoadSprites:
	IOA_ AZ 0;
	IOD_ A 0;
	IOY_ AZ 0;
	IYD_ A 0;
  Spawn:
	IOY_ Z -1;
	Stop;
  OverlayIdle:
	IOA_ # 1
	{
		let p = player.FindPSprite(OverlayID());
		if (p)
		{
			p.frame = invoker.fram;
			p.sprite = (CountInv("DCY_ArcUpgrade") ? GetSpriteIndex("IOA_") : GetSpriteIndex("IOY_"));
		}
		
		A_ArcTrail();
	}
	Loop;
  OverlayTrail:
	IOD_ A 0
	{
		let p = player.FindPSprite(OverlayID());
		if (p)
		{
			p.frame = invoker.fram;
			p.sprite = (CountInv("DCY_ArcUpgrade") ? GetSpriteIndex("IOD_") : GetSpriteIndex("IYD_"));
		}
	}
	#### # 1 Bright
	{
		int lay = clamp(OverlayID() + 10000, 0, ARC_TRAIL);
		A_OverlayOffset(OverlayID(), -(invoker.w_pa[lay] - angle), (invoker.w_pp[lay] - pitch) / 3, WOF_ADD);
		
		invoker.w_pa[lay] = angle;
		invoker.w_pp[lay] = pitch;
		
		let s = player.FindPSprite(OverlayID());
		if (s)
		{
			if (s.alpha <= 0) return ResolveState("OverlayNull");
			else A_OverlayAlpha(OverlayID(), s.alpha - 0.03125);
			A_OverlayScale(OverlayID(), s.scale.x * 1.0175, s.scale.y * 1.0175, WOF_INTERPOLATE);
		}
		
		return ResolveState(null);
	}
	Wait;
  Select:
	TNT1 A 0
	{
		invoker.offsx = 100;
		invoker.offsy = 100;
		invoker.fram = 0;
		A_WeaponOffset(0, 32, WOF_INTERPOLATE);
	}
	TNT1 A 1
	{
		DCY_Raise();
		return (invoker.offsx <= 0.1 || invoker.offsy <= 0.1) ? ResolveState("Ready") : ResolveState(null);
	}
	TNT1 A 1
	{
		A_Overlay(4, "OverlayIdle");
		A_OverlayFlags(4, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
		A_OverlayRenderStyle(4, STYLE_ADD);
		DCY_Raise();
		return (invoker.offsx <= 0.1 || invoker.offsy <= 0.1) ? ResolveState("Ready") : ResolveState(null);
	}
	Goto Select+2;
  Deselect:
	TNT1 A 0
	{
		invoker.offsx = invoker.saveoffsx + 2;
		invoker.offsy = invoker.saveoffsy + 2;
		invoker.fram = 0;
	}
	TNT1 A 1
	{
		A_Overlay(4, "OverlayIdle");
		A_OverlayFlags(4, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
		A_OverlayRenderStyle(4, STYLE_ADD);
		DCY_Lower(1.85);
		
		return (invoker.offsx >= 5000 || invoker.offsy >= 5000) ? ResolveState("DeselectLoop") : ResolveState(null);
	}
	Goto Deselect+1;
  Ready:
	TNT1 A 1
	{
		A_Overlay(4, "OverlayIdle");
		A_OverlayFlags(4, PSPF_RENDERSTYLE|PSPF_ALPHA, true);
		A_OverlayRenderStyle(4, STYLE_ADD);
		A_WeaponReady();
		A_OverlayOffset(4, 0, 0, WOF_INTERPOLATE);
		invoker.fram = 0;
	}
	Loop;
  Fire:
	TNT1 A 0
	{
		A_OverlayFlags(4, PSPF_RENDERSTYLE|PSPF_ALPHA, false);
		invoker.fram = 0;
		invoker.slice = 0;
		invoker.swing = 0;
		//Make sure the variables reset when slicing
		invoker.xx = invoker.wsavex;
		invoker.yy = invoker.wsavey;
	}
	TNT1 AAAAAAAAAAA 1
	{
		invoker.xx = CyberaugumentedEventHandler.Lerp(invoker.xx, 90, 0.3);
		invoker.yy = CyberaugumentedEventHandler.Lerp(invoker.yy, 25, 0.3);
		A_WeaponOffset(invoker.xx, invoker.yy, WOF_INTERPOLATE);
	}
	TNT1 A 0 A_StartSound("IArc/Swing", CHAN_WEAPON, pitch: frandom(0.92, 1.08));
	TNT1 AAAAAAAAAA 1
	{
		int ddmg_check = (CountInv("DCY_RazePower") ? 2 : 1);
		int dmg = (CountInv("DCY_ArcUpgrade") ? (6 * (random(6, 10) + 2)) : (3 * (random(5, 8) + 1))) * (CheckInventory("DCY_OverloadStrength", 1) ? 3 : 1);
		dmg /= ddmg_check;
		
		invoker.fram = int(1 + invoker.slice);
		invoker.slice += 0.35;
		invoker.xx -= 28;
		invoker.yy += 9;
		A_WeaponOffset(invoker.xx, invoker.yy, WOF_INTERPOLATE);
		
		invoker.swing++;
		
		if (invoker.swing % 2)
		{
			double vswing = -125 + (invoker.swing * 25);
			double hswing = -25 + (invoker.swing * 5);
			
			if (vswing == 0 && hswing == 0)
				A_CustomPunch(dmg, true, CPF_NOTURN, "DCY_Null2", (CountInv("DCY_ArcUpgrade") ? 128 : 100));
			else
				A_FireBullets(-50 + (invoker.swing * 25), -10 + (invoker.swing * 5), 1, dmg / 2, "DCY_Null2", FBF_EXPLICITANGLE|FBF_NORANDOM, (CountInv("DCY_ArcUpgrade") ? 128 : 100));
		}
	}
	TNT1 A 0 A_Refire();
	TNT1 AAAAAAAAAA 1
	{
		invoker.fram = 0;
		invoker.xx = CyberaugumentedEventHandler.Lerp(invoker.xx, 0, 0.365);
		invoker.yy = CyberaugumentedEventHandler.Lerp(invoker.yy, 32, 0.365);
		A_WeaponOffset(invoker.xx, invoker.yy, WOF_INTERPOLATE);
	}
	Goto Ready;
  }
}

//Chainsaw replacer
Class DCY_ArcUpgrade : Inventory
{
  Default
  {
	Inventory.PickupSound "IArc/Upgrade";
	Inventory.PickupMessage "The Ionized Arc's plasma temperature has drastically increased.";
	Scale 0.99;
	+INVENTORY.AUTOACTIVATE
	+INVENTORY.HUBPOWER
	Inventory.MaxAmount 1;
	Inventory.InterHubAmount 1;
  }
  
  States
  {
  Spawn:
	UPG_ A -1;
	Stop;
  }
}