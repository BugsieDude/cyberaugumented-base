Class DCY_OrdnanceSpawnInit : Actor
{
	static const string VanillaWeps[] =
	{
		"DCY_EnergyExtravasation",
		"DCY_MesonDischarge",
		"DCY_Caduceus",
		"DCY_Oxidation"
	};
	
	override void PostBeginPlay()
	{
		let wep = spawn(vanillaweps[random(0, vanillaweps.Size() - 1)], vec3offset(0, 0, 0));
		let ord = spawn("DCY_OrdnanceSpawn", vec3offset(0, 0, 0));
		destroy();
		return;
	}
}

Class DCY_OrdnanceSpawnInitBFG : DCY_OrdnanceSpawnInit
{
	static const string BFGWeps[] =
	{
		"DCY_PhotonCrux",
		"DCY_Liquidation"
	};
	
	override void PostBeginPlay()
	{
		let wep = spawn(BFGWeps[random(0, BFGWeps.Size() - 1)], vec3offset(0, 0, 0));
		let ord = spawn("DCY_OrdnanceSpawn", vec3offset(0, 0, 0));
		destroy();
		return;
	}
}

Class DCY_OrdnanceSpawn : Actor
{
	Default
	{
		Radius 10;
		Height 10;
		Monster;
		+THRUACTORS
		-COUNTKILL
		-SHOOTABLE
	}
	
	void Wandering()
	{
		vel.x += frandom(-5, 5);
		vel.y += frandom(-5, 5);
		angle += 0.5;
	}
	
	States
	{
	Spawn:
		TNT1 A 10;
	Idle:
		TNT1 A 1
		{
			Wandering();
			A_Look();
		}
		Loop;
	See:
		TNT1 A 1
		{
			Wandering();
			if (target && distance3D(target) < 300 && CheckSight(target))
			{
				A_Stop();
				SetStateLabel("Appear");
			}
		}
		Loop;
	Appear:
		TNT1 A random(10, 400);
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
		{
			A_QuakeEx(random(0, 1), random(0, 1), random(0, 1), 5, 0, 300, "none", QF_SCALEDOWN|QF_3D);
			if (!random(0, 8)) A_SpawnItemEx("DCY_CinerealBinary", frandom(-100, 100), frandom(-100, 100), frandom(10, 40), flags: SXF_NOCHECKPOSITION);
			A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(80, 155), frandom(100, 180), 0, frandom(-70, 70), frandom(-70, 70), frandom(-70, 70), velx: frandom(-2, 2), vely: frandom(-2, 2), velz: frandom(0.5, 2), startalphaf: frandom(.1, .3), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-3, 3));
		}
		TNT1 A 1
		{
			A_QuakeEx(3, 3, 3, 75, 0, 500, "none", QF_SCALEDOWN|QF_3D, rollintensity: 0.1);
			for (int i = random(15, 20); i > 0; i--) A_SpawnItemEx("DCY_CinerealHeavyBinary", frandom(-20, 20), frandom(-20, 20), frandom(0, 30), frandom(-4, 4), frandom(-4, 4), frandom(2, -2), flags: SXF_NOCHECKPOSITION);
			A_SpawnItemEx("DCY_CinerealOrbit", flags: SXF_NOCHECKPOSITION);
			A_SpawnItemEx("DCY_CinerealCircle", flags: SXF_NOCHECKPOSITION);
			A_SpawnItemEx("DCY_CinerealCircle2", flags: SXF_NOCHECKPOSITION);
			for (int i = random(6, 12); i > 0; i--) A_SpawnItemEx("DCY_CinerealLongBinary", frandom(-30, 30), frandom(-30, 30), frandom(-10, 500), zvel: 5.5 * randompick(1, 1, -1), flags: SXF_NOCHECKPOSITION);
			A_SpawnParticleEx("cccccc", TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 50, 650, startalphaf: 1, sizestep: -50, startroll: frandom(0, 360), rollvel: frandom(-5, 5));
			for (int i = 0; i < 360; i += random(20, 40)) A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(90, 135), frandom(150, 200), i, zoff: 20, velx: frandom(-0.5, 0.5) + frandom(2.5, 3.5), vely: frandom(-0.5, 0.5), velz: frandom(-1.5, 1.5), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-2, 2));
			for (int i = 0; i < 360; i += random(30, 60)) A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(280, 435), frandom(100, 180), i, frandom(-70, 70), frandom(-70, 70), frandom(-70, 70), velx: frandom(-0.5, 0.5) + frandom(0, 0.5), vely: frandom(-0.5, 0.5), velz: frandom(-1.5, 1.5), startalphaf: frandom(.3, .6), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-1, 1));
			A_StartSound("LIGTPKP2", 10, CHANF_OVERLAP, volume: 0.825, attenuation: .4, pitch: 0.4);
			A_StartSound("LIGTPKP2", 10, CHANF_OVERLAP, volume: 0.625, attenuation: .4, pitch: 0.3);
			A_StartSound("dcy/suddenflash", 10, CHANF_OVERLAP, volume: 0.8, attenuation: .3, pitch: 0.9);
			A_StartSound("dcy/anamnesis", 10, CHANF_OVERLAP, attenuation: .2, pitch: 0.75);
			A_StartSound("dcy/anamnesis", 10, CHANF_OVERLAP, attenuation: .2, pitch: 0.75);
			A_StartSound("Ordnance/Super", 10, CHANF_OVERLAP, volume: 0.5, attenuation: .4, pitch: 0.7);
			A_StartSound("Ordnance/Appear", 10, CHANF_OVERLAP, attenuation: .2, pitch: 0.7);
			A_StartSound("Ordnance/Appear", 10, CHANF_OVERLAP, attenuation: .2, pitch: 0.4);
			A_StartSound("Ordnance/Appear", 10, CHANF_OVERLAP, attenuation: .2, pitch: 0.2);
			A_SpawnItemEx("DCY_Ordnance", flags: SXF_SETMASTER);
		}
		TNT1 A random(2, 1)
		{
			A_FadeOut(0.005);
			if (!random(0, 7)) A_SpawnItemEx("DCY_CinerealLongBinary", frandom(-150, 150), frandom(-150, 150), frandom(-50, 50), zvel: 5.5 * randompick(1, 1, -1), flags: SXF_NOCHECKPOSITION);
		}
		Wait;
	}
}

Class DCY_Ordnance : DCY_Weapon
{
  Default
  {
	Weapon.Selectionorder 2500;
	Weapon.AmmoUse1 1;
	Weapon.AmmoGive 40;
	Weapon.AmmoType1 "DCY_Antimateria";
	Weapon.Kickback 100;
	Weapon.SlotNumber 8;
	Height 20;
	Inventory.Pickupmessage "The hell is this?";
	Inventory.PickupSound "Ordnance/Whiz";
	Tag "Cinereal Ordnance, Utility of Substantiality";
	Obituary "%o is now nothing.";
	+WEAPON.BFG;
	+FLOATBOB;
	+WEAPON.NOAUTOAIM;
	FloatBobStrength 0.4;
  }
  
  override Inventory CreateCopy(Actor other)
  {
	let x = CA_Variables.Get();
	if (x && !x.hasAntimateriaWeapons) x.hasAntimateriaWeapons = true;
	return Super.CreateCopy(other);
  }
  
  action void DCY_CinerealScales()
  {
	DCY_HandleScale(5);
	DCY_HandleScale(60);
	DCY_HandleScale(80);
  }
  
  action void A_Cinereal()
  {
	if (player == null) return;
	
	Weapon weap = player.ReadyWeapon;
	if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
	{
		if (!weap.DepleteAmmo (weap.bAltFire, true, 1)) return;
		A_QuakeEx(2, 2, 2, 8, 0, 200, "none", QF_SCALEDOWN|QF_3D);
		A_GunFlash();
		
		A_Overlay(10, "Feel");
		A_Overlay(5, "OverlayFire");
		A_StartSound("Ordnance/Beam", 15, volume: 0.5);
		A_StartSound("Ordnance/BeamAdd", 16, volume: 0.5);
		A_WeaponOffset(frandom(-1.5, 1.5), frandom(-1.5, 1.5), WOF_ADD|WOF_INTERPOLATE);
		SpawnPlayerMissile("DCY_CinerealBall", 1e37 + frandom(-20, 20));
	}
  }
  
  States
  {
  LoadSprites:
	0RD4 AB 0;
  Spawn:
	0RD3 AB random(1, 2)
	{
		if (!random(0, 3)) A_SpawnItemEx("DCY_CinerealBinary", frandom(-40, 40), frandom(-40, 40), frandom(0, 30), zvel: frandom(0, 1), flags: SXF_NOCHECKPOSITION);
		if (!random(0, 10)) A_SpawnItemEx("DCY_CinerealHeavyBinary", frandom(-40, 40), frandom(-40, 40), frandom(0, 30), zvel: frandom(0.5, 1.5), flags: SXF_NOCHECKPOSITION);
	}
	Loop;
  OverlayIdle:
	0RDG A 1;
	Loop;
  OverlayFire:
	0RDG M 1
	{
		invoker.lower = 15;
		A_WeaponOffset(0, 32 + (invoker.lower / 6), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	0RDG EMNOMNOEDCBA 1
	{
		invoker.lower *= 0.7;
		A_WeaponOffset(0, 32 + (invoker.lower / 6), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	Loop;
  OverlayCharge:
	0RDG AAAAABBBBBCCCCCDDDDDEEEEE 1
	{
		invoker.lower += 0.1;
		A_WeaponOffset(0, 32 + (invoker.lower / 6), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	0RDG A 0
	{
		invoker.lower = 0;
		A_WeaponOffset(0, 32 + (invoker.lower / 6), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	Goto OverlayFire;
  OverlayStartup:
	0RD2 A 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s)
		{
			if (s.alpha <= 0) return ResolveState("OverlayNull");
			else A_OverlayAlpha(OverlayID(), s.alpha - 0.05);
			A_OverlayScale(OverlayID(), s.scale.x * 1.05, s.scale.y * 1.05, WOF_INTERPOLATE);
		}
		
		return ResolveState(null);
	}
	Wait;
  OverlayStartup2:
	0RD2 BBBBBBBBBB 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), s.alpha + 0.1);
		DCY_HandleScale(OverlayID());
	}
	0RD2 BBBBBBBBBB 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), s.alpha - 0.1);
		DCY_HandleScale(OverlayID());
	}
	Stop;
  OverlayHum:
	0RD2 BBBBBBBBBBBBBBBBBBBB 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), s.alpha + 0.025);
		DCY_HandleScale(OverlayID());
	}
	0RD2 BBBBBBBBBBBBBBBBBBBB 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), s.alpha - 0.025);
		DCY_HandleScale(OverlayID());
	}
	Stop;
  Feel:
	TNT1 A 1 A_ZoomFactor(0.925);
	TNT1 A 1 A_ZoomFactor(0.9775);
	TNT1 A 1 A_ZoomFactor(0.9825);
	TNT1 A 1 A_ZoomFactor(0.9926);
	TNT1 A 1 A_ZoomFactor(0.995);
	TNT1 A 1 A_ZoomFactor(0.997);
	TNT1 A 1 A_ZoomFactor(1);
	Stop;
  Select:
	TNT1 A 0
	{
		invoker.offsy = 150;
		A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		A_OverlayPivotAlign(5, PSPA_CENTER, PSPA_CENTER);
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		DCY_Raise(0.4);
		A_OverlayPivotAlign(5, PSPA_CENTER, PSPA_CENTER);
		return (invoker.offsy <= 0.1) ? ResolveState("Hello") : ResolveState(null);
	}
	Goto Select+1;
  Deselect:
	TNT1 A 0
	{
		invoker.offsy = invoker.saveoffsy + 2;
		A_StopSounds(14, 15);
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		DCY_Lower(1.75);
		
		return (invoker.offsy >= 150) ? ResolveState("DeselectLoop") : ResolveState(null);
	}
	Goto Deselect+1;
  Hello:
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		A_Overlay(80, "OverlayStartup2");
		A_Overlay(81, "OverlayStartup");
		A_OverlayFlags(80, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(80, STYLE_ADD);
		A_OverlayAlpha(80, 0.1);
		A_OverlayFlags(81, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(81, STYLE_ADD);
		A_OverlayPivotAlign(80, PSPA_CENTER, PSPA_CENTER);
		A_OverlayPivotAlign(81, PSPA_CENTER, PSPA_CENTER);
		A_StartSound("Ordnance/Appear", 10);
	}
	Goto Ready;
  Ready:
	TNT1 A 1
	{
		invoker.lower = 0;
		A_Overlay(5, "OverlayIdle");
		A_WeaponReady();
		A_OverlayOffset(5, 0, 0, WOF_INTERPOLATE);
		
		if (!(GetAge() % random(200, 300)))
		{
			A_StartSound("Ordnance/Hum", CHAN_6, volume: 0.5);
			A_Overlay(60, "OverlayHum");
			A_OverlayFlags(60, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
			A_OverlayRenderStyle(60, STYLE_ADD);
			A_OverlayAlpha(60, 0.01);
		}
	}
	Loop;
  Fire:
  NormalFire:
	TNT1 A 28
	{
		A_StartSound("Ordnance/Super", 11, volume: 0.65, pitch: 1.35);
		A_StartSound("Ordnance/Charge", 12, volume: 0.4, pitch: 1);
		A_Overlay(5, "OverlayCharge");
		A_Overlay(60, "OverlayStartup2");
		A_OverlayFlags(60, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(60, STYLE_ADD);
		A_OverlayAlpha(60, 0.01);
	}
	TNT1 A 0 A_StopSound(12);
	Goto NormalLoop;
  NormalLoop:
	TNT1 A 4 A_Cinereal();
	TNT1 A 0 A_Refire("NormalLoop");
	Goto Ready;
  }
}

Class DCY_CinerealBall : DCY_PProjectile
{
	Default
	{
		Damage 55;
		DamageType "Holy";
		+SEEKERMISSILE
		+NOEXTREMEDEATH
		+ROLLSPRITE
		+ROLLCENTER
		+BRIGHT
		Radius 7;
		Height 7;
		Speed 15;
		RenderStyle "Add";
		Scale 1.3;
		Translation "0:255=%[0.00,0.00,0.00]:[1.01,1.01,1.01]";
	}
	
	void BallFX()
	{
		if (!random(0, 2)) A_SpawnItemEx("DCY_CinerealBinary", frandom(-20, 20), frandom(-20, 20), frandom(-20, 20), flags: SXF_NOCHECKPOSITION);
		A_SpawnParticleEx("333333", TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 1, frandom(25, 180), startalphaf: frandom(.5, 1), startroll: frandom(0, 360), rollvel: frandom(-1, 1));
		A_SpawnParticleEx("dddddd", TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 1, frandom(25, 35), startalphaf: frandom(.8, 1), startroll: frandom(0, 360), rollvel: frandom(-1, 1));
		A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(25, 35), frandom(25, 50), startalphaf: frandom(.5, 1), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-1, 1));
		A_SpawnParticleEx("888888", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_SUBTRACT, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(25, 35), frandom(25, 50), xoff: frandom(-2, 2), startalphaf: frandom(.3, 1), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-1, 1));
	}
	
	States
	{
	Spawn:
		C3AL A 0 A_ScaleVelocity(frandom(0.6, 1.0));
		C3AL AAABBBCCCBBB 1
		{
			vel.x += frandom(-1, 1);
			vel.y += frandom(-1, 1);
			vel.z += frandom(-0.3, 0.3);
			
			roll = frandom(0, 360);
			BallFX();
			
			if (!(GetAge() % 3)) A_Tracer2(frandom(2, 10));
		}
		Goto Spawn+1;
	Death:
		TNT1 A 1
		{
			scale.x = frandom(0.3, 0.4);
			scale.y = scale.x;
			A_StartSound("Ordnance/Whiz", pitch: 1.3);
		}
		C28Y ABCDEFGHIJKLMNOPQ 1;
		Stop;
	}
}

Class DCY_CinerealBinary : Actor
{
	Default
	{
		+NOINTERACTION
		-SOLID
		+BRIGHT
		RenderStyle "Add";
		Scale 1.2;
	}
	
	States
	{
	LoadSprites:
		0RD4 AB 0;
	Spawn:
		0RD4 # 0 NoDelay { frame = random(0, 1); alpha = frandom(0.5, 1); }
		0RD4 # 1 { if (!random(0, 7)) frame = random(0, 1); A_FadeOut(0.075); }
		Wait;
	}
}

Class DCY_CinerealHeavyBinary : DCY_CinerealBinary
{
	Default { Scale 1.6; }
	
	States
	{
	Spawn:
		0RD4 # 0 NoDelay { frame = random(0, 1); alpha = frandom(0.5, 1); }
		0RD4 # 1 { if (!random(0, 4)) frame = random(0, 1); vel.z += 0.1; A_FadeOut(0.025); A_SpawnItemEx("DCY_BaseTrail2", flags: SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION|SXF_TRANSFERRENDERSTYLE); }
		Wait;
	}
}

Class DCY_CinerealLongBinary : DCY_CinerealBinary
{
	Default { Alpha 1; }
	
	int timer;
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		timer = random(3, 12);
	}
	
	States
	{
	Spawn:
		TNT1 A 2
		{
			let fx = Spawn("DCY_CinerealLongBinaryFX", Vec3Offset(0,0,0));
			if (--timer <= 0)
			{
				Destroy();
				return;
			}
		}
		Loop;
	}
}

Class DCY_CinerealLongBinaryFX : DCY_CinerealBinary
{
	Default { Scale 1.6; }
	
	States
	{
	Spawn:
		0RD4 # 0 NoDelay { frame = random(0, 1); }
		0RD4 ######### 1 { if (!random(0, 4)) frame = random(0, 1); }
		0RD4 # 1 { if (!random(0, 4)) frame = random(0, 1); A_FadeOut(0.1); }
		Wait;
	}
}

Class DCY_CinerealOrbit : DCY_CinerealBinary
{
	Default
	{
		YScale 300;
		XScale 3;
		Alpha 0.2;
	}
	
	override void Tick()
	{
		super.Tick();
		
		if (!level.isFrozen()) scale.x += 0.1;
	}
	
	States
	{
	Spawn:
		L2ZO AAAA 1 A_FadeIn(0.2);
		L2ZO A 3;
		L2ZO A 1 A_FadeOut(0.075);
		Wait;
	}
}

Class DCY_CinerealCircle : DCY_CinerealBinary
{
	Default
	{
		Scale 0.1;
		Alpha 0.1;
		+FLATSPRITE
	}
	
	float rollf;
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		rollf = frandom(-3, 3);
	}
	
	override void Tick()
	{
		super.Tick();
		
		if (!level.isFrozen())
		{
			scale.x += 0.045;
			scale.y = scale.x;
			angle += rollf;
		}
	}
	
	States
	{
	Spawn:
		SPE2 FFFFF 1 A_FadeIn(0.2);
		SPE2 F 1 A_FadeOut(0.025);
		Wait;
	}
}

Class DCY_CinerealCircle2 : DCY_CinerealBinary
{
	Default
	{
		Scale 1.65;
		Alpha 0.9;
		+FLATSPRITE
	}
	
	States
	{
	Spawn:
		C28Y A 0 NoDelay { angle = random(0, 360); }
		C28Y ABCDEFGHIJKLMNOPQ 1;
		Stop;
	}
}