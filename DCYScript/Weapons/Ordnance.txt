Class DCY_OrdnanceSpawnInit : Actor
{
	static const string VanillaWeps[] =
	{
		"DCY_EnergyExtravasation",
		"DCY_MesonDischarge",
		"DCY_Caduceus",
		"DCY_Oxidation"
	};
	
	override void PostBeginPlay()
	{
		let wep = spawn(vanillaweps[random(0, vanillaweps.Size() - 1)], vec3offset(0, 0, 0));
		let ord = spawn("DCY_OrdnanceSpawn", vec3offset(0, 0, 0));
		destroy();
		return;
	}
}

Class DCY_OrdnanceSpawnInitBFG : DCY_OrdnanceSpawnInit
{
	static const string BFGWeps[] =
	{
		"DCY_PhotonCrux",
		"DCY_Liquidation"
	};
	
	override void PostBeginPlay()
	{
		let wep = spawn(BFGWeps[random(0, BFGWeps.Size() - 1)], vec3offset(0, 0, 0));
		let ord = spawn("DCY_OrdnanceSpawn", vec3offset(0, 0, 0));
		destroy();
		return;
	}
}

Class DCY_OrdnanceSpawn : Actor
{
	Default
	{
		Radius 10;
		Height 10;
		Monster;
		+THRUACTORS
		-COUNTKILL
		-SHOOTABLE
	}
	
	void Wandering()
	{
		vel.x += frandom(-5, 5);
		vel.y += frandom(-5, 5);
		angle += 0.5;
	}
	
	States
	{
	Spawn:
		TNT1 A 10;
	Idle:
		TNT1 A 1
		{
			Wandering();
			A_Look();
		}
		Loop;
	See:
		TNT1 A 1
		{
			Wandering();
			if (target && distance3D(target) < 300 && CheckSight(target))
			{
				A_Stop();
				SetStateLabel("Appear");
			}
		}
		Loop;
	Appear:
		TNT1 A random(10, 400);
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1
		{
			A_QuakeEx(random(0, 1), random(0, 1), random(0, 1), 5, 0, 300, "none", QF_SCALEDOWN|QF_3D);
			if (!random(0, 8)) A_SpawnItemEx("DCY_CinerealBinary", frandom(-100, 100), frandom(-100, 100), frandom(10, 40), flags: SXF_NOCHECKPOSITION);
			A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(80, 155), frandom(100, 180), 0, frandom(-70, 70), frandom(-70, 70), frandom(-70, 70), velx: frandom(-2, 2), vely: frandom(-2, 2), velz: frandom(0.5, 2), startalphaf: frandom(.1, .3), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-3, 3));
		}
		TNT1 A 1
		{
			A_QuakeEx(3, 3, 3, 75, 0, 500, "none", QF_SCALEDOWN|QF_3D, rollintensity: 0.1);
			for (int i = random(15, 20); i > 0; i--) A_SpawnItemEx("DCY_CinerealHeavyBinary", frandom(-20, 20), frandom(-20, 20), frandom(0, 30), frandom(-4, 4), frandom(-4, 4), frandom(2, -2), flags: SXF_NOCHECKPOSITION);
			A_SpawnItemEx("DCY_CinerealOrbit", flags: SXF_NOCHECKPOSITION);
			A_SpawnItemEx("DCY_CinerealCircle", flags: SXF_NOCHECKPOSITION);
			A_SpawnItemEx("DCY_CinerealCircle2", flags: SXF_NOCHECKPOSITION);
			for (int i = random(6, 12); i > 0; i--) A_SpawnItemEx("DCY_CinerealLongBinary", frandom(-30, 30), frandom(-30, 30), frandom(-10, 500), zvel: 5.5 * randompick(1, 1, -1), flags: SXF_NOCHECKPOSITION);
			A_SpawnParticleEx("cccccc", TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 50, 650, startalphaf: 1, sizestep: -50, startroll: frandom(0, 360), rollvel: frandom(-5, 5));
			for (int i = 0; i < 360; i += random(20, 40)) A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(90, 135), frandom(150, 200), i, zoff: 20, velx: frandom(-0.5, 0.5) + frandom(2.5, 3.5), vely: frandom(-0.5, 0.5), velz: frandom(-1.5, 1.5), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-2, 2));
			for (int i = 0; i < 360; i += random(30, 60)) A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(280, 435), frandom(100, 180), i, frandom(-70, 70), frandom(-70, 70), frandom(-70, 70), velx: frandom(-0.5, 0.5) + frandom(0, 0.5), vely: frandom(-0.5, 0.5), velz: frandom(-1.5, 1.5), startalphaf: frandom(.3, .6), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-1, 1));
			A_StartSound("dcy/suddenflash", 10, CHANF_OVERLAP, volume: 0.35, attenuation: .3, pitch: 0.95);
			A_StartSound("dcy/anamnesis", 10, CHANF_OVERLAP, attenuation: .2, pitch: 0.65);
			A_StartSound("Ordnance/BeamAdd", 10, CHANF_OVERLAP, volume: 0.5, attenuation: .4, pitch: 0.65);
			A_StartSound("Ordnance/Appear", 10, CHANF_OVERLAP, attenuation: .2, pitch: 0.3);
			A_StartSound("Ordnance/Shockwave", 10, CHANF_OVERLAP, attenuation: .125);
			A_StartSound("Ordnance/Hello", 10, CHANF_OVERLAP, attenuation: .2);
			A_SpawnItemEx("DCY_Ordnance", flags: SXF_SETMASTER);
		}
		TNT1 A random(2, 1)
		{
			A_FadeOut(0.005);
			if (!random(0, 7)) A_SpawnItemEx("DCY_CinerealLongBinary", frandom(-150, 150), frandom(-150, 150), frandom(-50, 50), zvel: 5.5 * randompick(1, 1, -1), flags: SXF_NOCHECKPOSITION);
		}
		Wait;
	}
}

Class DCY_Ordnance : DCY_Weapon
{
  Default
  {
	Weapon.Selectionorder 2500;
	Weapon.AmmoUse1 1;
	Weapon.AmmoUse2 1;
	Weapon.AmmoGive1 40;
	Weapon.AmmoGive2 40;
	Weapon.AmmoType1 "DCY_Antimateria";
	Weapon.AmmoType2 "DCY_Antimateria";
	Weapon.Kickback 100;
	Weapon.SlotNumber 8;
	Height 20;
	Inventory.Pickupmessage "The hell is this?";
	Inventory.PickupSound "Ordnance/Whiz";
	Tag "Cinereal Ordnance, Utility of Substantiality";
	Obituary "%o is now nothing.";
	+WEAPON.BFG;
	+FLOATBOB;
	+WEAPON.NOAUTOAIM;
	+NOEXTREMEDEATH
	FloatBobStrength 0.4;
  }
  
  int divinedeath;
  int divinecooldown;
  vector2 sc;
  
  action void A_StopEverySound(int vol = 0, bool v = true)
  {
	ThinkerIterator t = ThinkerIterator.Create("Actor");
	actor m;
	
	while (m = Actor(t.Next()))
	{
		if (m != self && m.Distance3D(self) <= 9000)
		{
			m.A_StopSounds(0, 999);
			if (v) for (int i = 0; i < 560; i++) m.A_SoundVolume(i, vol);
		}
	}
  }

  action void Kill(int dist = 2500)
  {
	BlockThingsIterator ti = BlockThingsIterator.Create(self, dist);
	actor a;
		
	while(ti.Next())
	{
		a = ti.thing;
		if (a && a != self && !(a is "PlayerPawn") && !a.bDORMANT && CheckSight(a) && a.distance3D(self) < dist)
		{
			a.DamageMobj(self, self, 20 * clamp(a.GetMaxHealth() / 1000, 1, 10000), "Heaven", DMG_THRUSTLESS);
			if (a.health <= 1)
			{
				a.A_SpawnItemEx("DCY_CinerealTakesAwayTheThreat", 0, 0, 6, flags: SXF_NOCHECKPOSITION|SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME);
				a.A_StopSounds(0, 0);
				a.Destroy();
			}
		}
	}
  }
  
  override Inventory CreateCopy(Actor other)
  {
	let x = CA_Variables.Get();
	if (x && !x.hasAntimateriaWeapons) x.hasAntimateriaWeapons = true;
	divinecooldown = 150;
	return Super.CreateCopy(other);
  }
  
  action void DCY_CinerealScales()
  {
	DCY_HandleScale(5);
	DCY_HandleScale(60);
	DCY_HandleScale(80);
  }
  
  action void A_Cinereal()
  {
	if (player == null) return;
	
	Weapon weap = player.ReadyWeapon;
	if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
	{
		if (!weap.DepleteAmmo(weap.bAltFire, true, 1)) return;
		A_QuakeEx(2, 2, 2, 8, 0, 200, "none", QF_SCALEDOWN|QF_3D);
		A_GunFlash();
		
		A_Overlay(10, "Feel");
		A_Overlay(5, "OverlayFire");
		A_StartSound("Ordnance/Beam", 15, volume: 0.5);
		A_StartSound("Ordnance/BeamAdd", 16, volume: 0.5);
		A_WeaponOffset(frandom(-1.5, 1.5), frandom(-1.5, 1.5), WOF_ADD|WOF_INTERPOLATE);
		SpawnPlayerMissile("DCY_CinerealBall", 1e37 + frandom(-20, 20));
	}
  }
  
  action void A_CinerealBlast()
  {
	for (int i = 30; i > 0; i--) invoker.DepleteAmmo(invoker.bAltFire, true);
	
	A_Overlay(10, "Feel");
	A_Overlay(5, "OverlayShockwaveFire");
		
	A_Overlay(60, "OverlayShockwaveBlast");
	A_OverlayFlags(60, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
	A_OverlayRenderStyle(60, STYLE_ADD);
	A_OverlayPivotAlign(60, PSPA_CENTER, PSPA_CENTER);
	
	A_Overlay(61, "OverlayShockwaveBlast2");
	A_OverlayFlags(61, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
	A_OverlayRenderStyle(61, STYLE_ADD);
	A_OverlayPivotAlign(61, PSPA_CENTER, PSPA_CENTER);
	
	for (int i = random(15, 20); i > 0; i--) A_SpawnItemEx("DCY_CinerealLongBinary", frandom(-200, 200), frandom(-200, 200), frandom(-50, 50), zvel: 5.5 * randompick(1, 1, -1), flags: SXF_NOCHECKPOSITION);
	for (int i = 0; i < 360; i += random(10, 30)) A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysquarep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(60, 105), frandom(5, 15), i, frandom(-20, 20), frandom(-20, 20), frandom(10, 40), velx: frandom(-0.25, 0.25) + frandom(3.5, 4.5), vely: frandom(-0.25, 0.25), velz: frandom(-0.25, 0.25), accelx: -0.025, sizestep: -0.25);
	for (int i = 0; i < 360; i += random(10, 20)) A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(40, 85), frandom(350, 405), i, frandom(-20, 20), frandom(-20, 20), frandom(0, 60), velx: frandom(-0.25, 0.25) + frandom(15.5, 20.5), vely: frandom(-0.25, 0.25), velz: frandom(-0.25, 0.25), accelx: -1, startalphaf: frandom(.5, .85), sizestep: 0.15);
		
	actor ring = Spawn("DCY_CinerealCircle2", vec3offset(0, 0, 0));
	if (ring) ring.scale *= 2.5;
	
	A_SpawnItemEx("DCY_CinerealTimeCircle", flags: SXF_NOCHECKPOSITION);

	A_QuakeEx(4, 4, 4, 60, 0, 1200, "", QF_SCALEDOWN|QF_3D, rollintensity: 0.15);
	A_StartSound("Ordnance/Time", 25);
  }
  
  action void A_CinerealBlastDamage()
  {
	int range = 390;
	BlockThingsIterator ti = BlockThingsIterator.Create(self, range);
	actor a;
		
	while(ti.Next())
	{
		a = ti.thing;
		double rad = abs((range - Distance3D(a)) / 2);
		if (a && a.Health > 0 && a.bSHOOTABLE && !a.bINVULNERABLE && !a.bDORMANT && !a.bNODAMAGE && CheckSight(a) && distance3D(a) < range)
		{
			if (!(a is "PlayerPawn"))
			{
				a.GiveInventory("DCY_CinerealTimeDebuff", 1);
				if (!a.bDONTTHRUST)
				{
					a.Vel3DFromAngle((rad / 6) / min(1, (a.Mass / (a.Mass / 4))), self.AngleTo(a), self.PitchTo(a));
					if (a.GetMaxHealth() < 2500) a.vel.z += (rad / 12) / ((a.Mass > 600) ? 2.5 : 1);
					a.vel.z = clamp(a.vel.z, -25, 25);
				}
			}
		}
	}
  }
  
  override void Tick()
  {
	super.Tick();
	if (!(GetAge() % 35) && divinecooldown > 0) divinecooldown--;
  }
  
  States
  {
  LoadSprites:
	0RD4 AB 0;
  Spawn:
	0RD3 AB random(1, 2)
	{
		if (!random(0, 3)) A_SpawnItemEx("DCY_CinerealBinary", frandom(-40, 40), frandom(-40, 40), frandom(0, 30), zvel: frandom(0, 1), flags: SXF_NOCHECKPOSITION);
		if (!random(0, 10)) A_SpawnItemEx("DCY_CinerealHeavyBinary", frandom(-40, 40), frandom(-40, 40), frandom(0, 30), zvel: frandom(0.5, 1.5), flags: SXF_NOCHECKPOSITION);
	}
	Loop;
  OverlayIdle:
	0RDG A 1;
	Loop;
  OverlayFire:
	0RDG M 1
	{
		invoker.lower = 15;
		A_WeaponOffset(0, 32 + (invoker.lower / 6), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	0RDG EMNOMNOEDCBA 1
	{
		invoker.lower *= 0.7;
		A_WeaponOffset(0, 32 + (invoker.lower / 6), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	Loop;
  OverlayCharge:
	0RDG AAAAABBBBBCCCCCDDDDDEEEEE 1
	{
		invoker.lower += 0.1;
		A_WeaponOffset(0, 32 + (invoker.lower / 6), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	0RDG A 0
	{
		invoker.lower = 0;
		A_WeaponOffset(0, 32 + (invoker.lower / 6), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	Goto OverlayFire;
  OverlayShockwaveCharge:
	0RDG AAAAAPPPPQQQQRRRRSSSSTTTTTTT 1 DCY_CinerealScales();
	Goto OverlayShockwaveFire;
  OverlayShockwaveFire:
	0RDG X 1
	{
		invoker.lower = 25;
		A_WeaponOffset(0, 32 + (invoker.lower / 9), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	0RDG XXXXXXXXXXXXXXXXXXXXXXYYYYYYYYYAAAAAA 1
	{
		invoker.lower *= 0.8;
		A_WeaponOffset(0, 32 + (invoker.lower / 9), WOF_INTERPOLATE);
		DCY_CinerealScales();
	}
	Goto OverlayIdle;
  OverlayShockwaveBlast:
	0RD2 F 1 Bright { invoker.sc = (1, 1); }
	0RD2 F 1 Bright
	{	
		let s = player.FindPSprite(OverlayID());
		if (s)
		{
			if (s.alpha <= 0) return ResolveState("OverlayNull");
			else A_OverlayAlpha(OverlayID(), s.alpha - 0.075);
			A_OverlayScale(OverlayID(), invoker.sc.x / 0.75, invoker.sc.y / 0.75, WOF_INTERPOLATE);
		}
		
		return ResolveState(null);
	}
	Wait;
  OverlayShockwaveBlast2:
	0RD2 E 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s)
		{
			if (s.alpha <= 0) return ResolveState("OverlayNull");
			else A_OverlayAlpha(OverlayID(), s.alpha - 0.03);
			DCY_HandleScale(OverlayID());
		}
		
		return ResolveState(null);
	}
	Wait;
  OverlaySuperchargeInfinitum:
	0RDG HIJKLLLL 4;
	0RD2 ABABABABA 1;
	Goto OverlayInfinitum;
  OverlayInfinitum:
	0RD2 CD 1 Bright;
	Loop;
  OverlayInfinitumPuff:
	0RD6 ABCDCB random(1, 5) Bright;
	Loop;
  OverlayInfinitumLight:
	0RD7 ABCDEFGHIHGFEDCB random(2, 4) Bright;
	Loop;
  OverlayInfinitumScreen1:
	0RD5 B 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), (cos(invoker.divinedeath * 20) / 4) + 0.25);
	}
	Loop;
  OverlayInfinitumScreen2:
	0RD5 B 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), (cos(invoker.divinedeath * 10) / 8) + 0.35);
	}
	Loop;
  OverlayStartup:
	0RD2 A 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s)
		{
			if (s.alpha <= 0) return ResolveState("OverlayNull");
			else A_OverlayAlpha(OverlayID(), s.alpha - 0.05);
			A_OverlayScale(OverlayID(), s.scale.x * 1.05, s.scale.y * 1.05, WOF_INTERPOLATE);
		}
		
		return ResolveState(null);
	}
	Wait;
  OverlayStartup2:
	0RD2 BBBBBBBBBB 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), s.alpha + 0.1);
		DCY_HandleScale(OverlayID());
	}
	0RD2 BBBBBBBBBB 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), s.alpha - 0.1);
		DCY_HandleScale(OverlayID());
	}
	Stop;
  OverlayHum:
	0RD2 BBBBBBBBBBBBBBBBBBBB 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), s.alpha + 0.025);
		DCY_HandleScale(OverlayID());
	}
	0RD2 BBBBBBBBBBBBBBBBBBBB 1 Bright
	{
		let s = player.FindPSprite(OverlayID());
		if (s) A_OverlayAlpha(OverlayID(), s.alpha - 0.025);
		DCY_HandleScale(OverlayID());
	}
	Stop;
  Feel:
	TNT1 A 1 A_ZoomFactor(0.925);
	TNT1 A 1 A_ZoomFactor(0.9775);
	TNT1 A 1 A_ZoomFactor(0.9825);
	TNT1 A 1 A_ZoomFactor(0.9926);
	TNT1 A 1 A_ZoomFactor(0.995);
	TNT1 A 1 A_ZoomFactor(0.997);
	TNT1 A 1 A_ZoomFactor(1);
	Stop;
  Feel2:
	TNT1 A 1 A_ZoomFactor(0.8);
	TNT1 A 1 A_ZoomFactor(0.85);
	TNT1 A 1 A_ZoomFactor(0.925);
	TNT1 A 1 A_ZoomFactor(0.95);
	TNT1 A 1 A_ZoomFactor(0.975);
	TNT1 A 1 A_ZoomFactor(0.9875);
	TNT1 A 1 A_ZoomFactor(0.99275);
	TNT1 A 1 A_ZoomFactor(0.995);
	TNT1 A 1 A_ZoomFactor(0.9975);
	TNT1 A 1 A_ZoomFactor(1);
	Stop;
  Select:
	TNT1 A 0
	{
		invoker.offsy = 150;
		A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		A_OverlayPivotAlign(5, PSPA_CENTER, PSPA_CENTER);
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		DCY_Raise(0.4);
		A_OverlayPivotAlign(5, PSPA_CENTER, PSPA_CENTER);
		return (invoker.offsy <= 0.1) ? ResolveState("Hello") : ResolveState(null);
	}
	Goto Select+1;
  Deselect:
	TNT1 A 0
	{
		invoker.offsy = invoker.saveoffsy + 2;
		A_StopSounds(14, 15);
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		DCY_Lower(1.75);
		
		return (invoker.offsy >= 150) ? ResolveState("DeselectLoop") : ResolveState(null);
	}
	Goto Deselect+1;
  Hello:
	TNT1 A 1
	{
		A_Overlay(5, "OverlayIdle");
		A_Overlay(80, "OverlayStartup2");
		A_Overlay(81, "OverlayStartup");
		A_OverlayFlags(80, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(80, STYLE_ADD);
		A_OverlayAlpha(80, 0.1);
		A_OverlayFlags(81, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(81, STYLE_ADD);
		A_OverlayPivotAlign(80, PSPA_CENTER, PSPA_CENTER);
		A_OverlayPivotAlign(81, PSPA_CENTER, PSPA_CENTER);
		A_StartSound("Ordnance/Appear", 10);
	}
	Goto Ready;
  Ready:
	TNT1 A 1
	{
		invoker.lower = 0;
		A_Overlay(5, "OverlayIdle");
		A_WeaponReady();
		A_OverlayOffset(5, 0, 0, WOF_INTERPOLATE);
		
		if (!(GetAge() % random(200, 300)))
		{
			A_StartSound("Ordnance/Hum", CHAN_6, volume: 0.5);
			A_Overlay(60, "OverlayHum");
			A_OverlayFlags(60, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
			A_OverlayRenderStyle(60, STYLE_ADD);
			A_OverlayAlpha(60, 0.01);
		}
	}
	Loop;
  Fire:
  NormalFire:
	TNT1 A 28
	{
		A_StartSound("Ordnance/Super", 11, volume: 0.65, pitch: 1.35);
		A_StartSound("Ordnance/Charge", 12, volume: 0.4, pitch: 1);
		A_Overlay(5, "OverlayCharge");
		A_Overlay(60, "OverlayStartup2");
		A_OverlayFlags(60, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(60, STYLE_ADD);
		A_OverlayAlpha(60, 0.01);
	}
	TNT1 A 0 A_StopSound(12);
	Goto NormalLoop;
  NormalLoop:
	TNT1 A 4 A_Cinereal();
	TNT1 A 0 A_Refire("NormalLoop");
	Goto Ready;
  AltFire:
  Shockwave:
	TNT1 A 1 A_Overlay(5, "OverlayShockwaveCharge");
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAA 1 A_WeaponOffset(frandom(-0.5, 0.5), frandom(-0.5, 0.5) + 31, WOF_INTERPOLATE);
	TNT1 A 40
	{
		A_CinerealBlast();
		A_CinerealBlastDamage();
		A_WeaponReady(WRF_NOFIRE);
	}
	Goto Ready;
  Infinitum:
	TNT1 A 0
	{
		if (invoker.divinecooldown > 0)
		{
			DCY_HudMessageFade.Show(PlayerNumber(), invoker.divinecooldown.." seconds.", 7777, (320, 160), 50, 0, 10, 1, DCY_HudMessage.AlignCenter, fnt: "SMALLFONT", screensize:(640, 360));
			Return ResolveState("Ready");
		}
		else
			Return ResolveState(null);
	}
	TNT1 A 1
	{
		A_Overlay(5, "OverlaySuperchargeInfinitum");
		A_StartSound("Ordnance/DistortAdd2", 11, pitch: 1.25);
	}
	TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 A_WeaponOffset(frandom(-1.5, 1.5), frandom(-0.5, 0.5) + 31, WOF_INTERPOLATE);
	TNT1 A 1 A_SetBlend("ffffff", 1, 5, "ffffff", 1);
	TNT1 AAAA 1 A_WeaponOffset(frandom(-5, 5), frandom(-2.5, 2.5), WOF_INTERPOLATE|WOF_ADD);
	TNT1 A 0
	{
		A_SetBlend("ffffff", 1, 5, "ffffff", 1);
		A_Overlay(5, "OverlayInfinitum");
		A_StopSound(11);
		A_StartSound("OmegaDivine/Start", 999, attenuation: 0);
		
		A_Overlay(86, "OverlayInfinitumScreen2");
		A_OverlayFlags(86, PSPF_FORCEALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(86, STYLE_SUBTRACT);
		A_OverlayScale(86, 50, 50);
		A_OverlayPivotAlign(86, PSPA_CENTER, PSPA_CENTER);
		
		A_Overlay(91, "OverlayInfinitumScreen1");
		A_OverlayFlags(91, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(91, STYLE_ADD);
		A_OverlayScale(91, 50, 50);
		A_OverlayPivotAlign(91, PSPA_CENTER, PSPA_CENTER);
		
		A_Overlay(87, "OverlayInfinitumPuff");
		A_OverlayFlags(87, PSPF_FORCEALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(87, STYLE_Add);
		A_OverlayOffset(87, 160, 100);
		A_OverlayScale(87, 2, 2);
		A_OverlayPivotAlign(87, PSPA_CENTER, PSPA_CENTER);
		
		A_Overlay(88, "OverlayInfinitumLight");
		A_OverlayFlags(88, PSPF_FORCEALPHA|PSPF_RENDERSTYLE, true);
		A_OverlayRenderStyle(88, STYLE_Add);
		A_OverlayOffset(88, 160, 122);
		A_OverlayScale(88, 1, 1);
		A_OverlayPivotAlign(88, PSPA_CENTER, PSPA_CENTER);
		
		S_ChangeMusic("");
		A_StopEverySound();
	}
	Goto InfinitumLight;
  InfinitumLight:
	TNT1 A 1
	{
		Kill();
		invoker.divinedeath += 1;
		A_StopEverySound(0, false);
		A_WeaponOffset(frandom(-1, 1), frandom(-1, 1) + 31, WOF_INTERPOLATE);
		
		if (invoker.divinedeath >= 325) Return ResolveState("InfinitumStop");
		Return ResolveState(null);
	}
	Loop;
  InfinitumStop:
	TNT1 A 1
	{
		A_ClearOverlays(86, 91);
		A_StopEverySound(1, true);
		A_StartSound("Ordnance/Impact", 11, volume: 0.5, pitch: 0.5);
		A_Overlay(5, "OverlayIdle");
		A_SetBlend("000000", 1, 60, "ffffff");
		A_SetBlend("ffffff", 1, 20, "000000");
		S_ChangeMusic("*");
		invoker.divinedeath = 0;
		invoker.divinecooldown = 150;
	}
	Goto Ready;
  }
}

Class DCY_CinerealBall : DCY_PProjectile
{
	Default
	{
		Damage 55;
		DamageType "Holy";
		+SEEKERMISSILE
		+NOEXTREMEDEATH
		+ROLLSPRITE
		+ROLLCENTER
		+BRIGHT
		Radius 7;
		Height 7;
		Speed 15;
		RenderStyle "Add";
		Scale 1.3;
		Translation "0:255=%[0.00,0.00,0.00]:[1.01,1.01,1.01]";
	}
	
	void BallFX()
	{
		if (!random(0, 2)) A_SpawnItemEx("DCY_CinerealBinary", frandom(-20, 20), frandom(-20, 20), frandom(-20, 20), flags: SXF_NOCHECKPOSITION);
		A_SpawnParticleEx("333333", TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 1, frandom(25, 180), startalphaf: frandom(.5, 1), startroll: frandom(0, 360), rollvel: frandom(-1, 1));
		A_SpawnParticleEx("dddddd", TexMan.CheckForTexture("graphics/Particles/dcyglowp.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, 1, frandom(25, 35), startalphaf: frandom(.8, 1), startroll: frandom(0, 360), rollvel: frandom(-1, 1));
		A_SpawnParticleEx("aaaaaa", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_ADD, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(25, 35), frandom(25, 50), startalphaf: frandom(.5, 1), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-1, 1));
		A_SpawnParticleEx("888888", TexMan.CheckForTexture("graphics/Particles/dcysmokep.png"), STYLE_SUBTRACT, SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL, random(25, 35), frandom(25, 50), xoff: frandom(-2, 2), startalphaf: frandom(.3, 1), sizestep: 0.725, startroll: frandom(0, 360), rollvel: frandom(-1, 1));
	}
	
	States
	{
	Spawn:
		C3AL A 0 A_ScaleVelocity(frandom(0.6, 1.0));
		C3AL AAABBBCCCBBB 1
		{
			vel.x += frandom(-1, 1);
			vel.y += frandom(-1, 1);
			vel.z += frandom(-0.3, 0.3);
			
			roll = frandom(0, 360);
			BallFX();
			
			if (!(GetAge() % 3)) A_Tracer2(frandom(2, 10));
		}
		Goto Spawn+1;
	Death:
		TNT1 A 1
		{
			scale.x = frandom(0.3, 0.4);
			scale.y = scale.x;
			A_StartSound("Ordnance/Whiz", pitch: 1.3);
			A_StartSound("Ordnance/Impact", 10, volume: 0.5, pitch: 1.5);
		}
		C28Y ABCDEFGHIJKLMNOPQ 1;
		Stop;
	}
}

Class DCY_CinerealBinary : Actor
{
	Default
	{
		+NOINTERACTION
		-SOLID
		+BRIGHT
		RenderStyle "Add";
		Scale 1.2;
	}
	
	States
	{
	LoadSprites:
		0RD4 AB 0;
	Spawn:
		0RD4 # 0 NoDelay { frame = random(0, 1); alpha = frandom(0.5, 1); }
		0RD4 # 1 { if (!random(0, 7)) frame = random(0, 1); A_FadeOut(0.075); }
		Wait;
	}
}

Class DCY_CinerealHeavyBinary : DCY_CinerealBinary
{
	Default { Scale 1.6; }
	
	States
	{
	Spawn:
		0RD4 # 0 NoDelay { frame = random(0, 1); alpha = frandom(0.5, 1); }
		0RD4 # 1 { if (!random(0, 4)) frame = random(0, 1); vel.z += 0.1; A_FadeOut(0.025); A_SpawnItemEx("DCY_BaseTrail2", flags: SXF_TRANSFERSCALE|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERTRANSLATION|SXF_TRANSFERRENDERSTYLE); }
		Wait;
	}
}

Class DCY_CinerealLongBinary : DCY_CinerealBinary
{
	Default { Alpha 1; }
	
	int timer;
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		timer = random(3, 12);
	}
	
	States
	{
	Spawn:
		TNT1 A 2
		{
			let fx = Spawn("DCY_CinerealLongBinaryFX", Vec3Offset(0,0,0));
			if (--timer <= 0)
			{
				Destroy();
				return;
			}
		}
		Loop;
	}
}

Class DCY_CinerealLongBinaryFX : DCY_CinerealBinary
{
	Default { Scale 1.6; }
	
	States
	{
	Spawn:
		0RD4 # 0 NoDelay { frame = random(0, 1); }
		0RD4 ######### 1 { if (!random(0, 4)) frame = random(0, 1); }
		0RD4 # 1 { if (!random(0, 4)) frame = random(0, 1); A_FadeOut(0.1); }
		Wait;
	}
}

Class DCY_CinerealOrbit : DCY_CinerealBinary
{
	Default
	{
		YScale 300;
		XScale 3;
		Alpha 0.2;
	}
	
	override void Tick()
	{
		super.Tick();
		
		if (!level.isFrozen()) scale.x += 0.1;
	}
	
	States
	{
	Spawn:
		L2ZO AAAA 1 A_FadeIn(0.2);
		L2ZO A 3;
		L2ZO A 1 A_FadeOut(0.075);
		Wait;
	}
}

Class DCY_CinerealCircle : DCY_CinerealBinary
{
	Default
	{
		Scale 0.1;
		Alpha 0.1;
		+FLATSPRITE
	}
	
	float rollf;
	
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		rollf = frandom(-3, 3);
	}
	
	override void Tick()
	{
		super.Tick();
		
		if (!level.isFrozen())
		{
			scale.x += 0.045;
			scale.y = scale.x;
			angle += rollf;
		}
	}
	
	States
	{
	Spawn:
		SPE2 FFFFF 1 A_FadeIn(0.2);
		SPE2 F 1 A_FadeOut(0.025);
		Wait;
	}
}

Class DCY_CinerealCircle2 : DCY_CinerealBinary
{
	Default
	{
		Scale 1.65;
		Alpha 0.9;
		+FLATSPRITE
	}
	
	States
	{
	Spawn:
		C28Y A 0 NoDelay { angle = random(0, 360); }
		C28Y ABCDEFGHIJKLMNOPQ 1;
		Stop;
	}
}

Class DCY_CinerealTimeCircle : DCY_CinerealCircle
{
	Default
	{
		Scale 1.65;
		Alpha 0.9;
		+FLATSPRITE
	}
	
	States
	{
	Spawn:
		T1Z_ A 0 NoDelay { angle = random(0, 360); }
		T1Z_ B 1
		{
			scale.x *= 1.035;
			scale.y = scale.x;
			A_FadeOut(0.02);
		}
		Wait;
	}
}

Class DCY_CinerealTimeDebuff : Powerup
{
  Default
  {
  +INVENTORY.AUTOACTIVATE;
  +INVENTORY.ALWAYSPICKUP;
  Powerup.Duration -4;
  }
  
  override void PostBeginPlay()
  {
	super.PostBeginPlay();
	if (owner && owner.bISMONSTER) owner.SetStateLabel("Pain");
  }
  
  override void DoEffect()
  {
	super.DoEffect();
	if (owner)
	{
		owner.A_SetTics(500);
		if (!(GetAge() % random(2, 12)))
		{
			let binary = Spawn("DCY_CinerealBinary", owner.pos + (frandom(owner.radius, -owner.radius), frandom(owner.radius, -owner.radius), frandom(0, owner.height)));
			if (binary) binary.vel.z += frandom(-3, 3);
		}
		
		owner.vel *= 0.96;
	}
  }
  
  override void DetachFromOwner()
  { 
	super.DetachFromOwner();
	if(owner && owner.health > 0 && owner.bISMONSTER) owner.A_SetTics(5);
  }
  
  override void EndEffect()
  {
	Super.EndEffect();
	if(owner && owner.health > 0 && owner.bISMONSTER) owner.A_SetTics(5);
  }

  override void OwnerDied()
  {
	if(owner && owner.health > 0 && owner.bISMONSTER) owner.A_SetTics(5);
	super.OwnerDied();
	Destroy();
  }
}


Class DCY_CinerealTakesAwayTheThreat : Actor
{
	Default
	{
		RenderStyle "AddStencil";
		StencilColor "White";
		+BRIGHT
		+NOINTERACTION
	}
	
	float x1, y1;
	
	States
	{
	Spawn:
		#### # 1
		{
			scale.x -= 0.075 + x1;
			scale.y += 0.075 + y1;
			
			x1 = y1 += 0.01;
			if (scale.x <= 0) { Destroy(); return; }
		}
		Loop;
	}
}